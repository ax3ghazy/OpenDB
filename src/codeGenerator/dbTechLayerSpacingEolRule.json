{
    "name": "dbTechLayerSpacingEolRule",
    "type": "dbObject",
    "fields": [
      {
        "type": "int",
        "name": "_eol_space",
        "flags": []
      },
      {
        "type": "int",
        "name": "_eol_width",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_exact_width_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_wrong_dir_spacing_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_wrong_dir_space",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_opposite_width_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_opposite_width",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_within_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_eol_within",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_wrong_dir_within_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_wrong_dir_within",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_same_mask_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_except_exact_width_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_exact_width",
        "flags": []
      },
      {
        "type": "int",
        "name": "_other_width",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_fill_concave_corner_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_fill_triangle",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_withcut_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_cut_class_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_cut_class",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_with_cut_above_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_with_cut_space",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_enclosure_end_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_enclosure_end_width",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_enclosure_end_within_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_enclosure_end_within",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_end_prl_spacing_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_end_prl_space",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_prl_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_end_prl",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_end_to_end_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_end_to_end_space",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_cut_spaces_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_one_cut_space",
        "flags": []
      },
      {
        "type": "int",
        "name": "_two_cut_space",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_extension_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_extension",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_wrong_dir_extension_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_wrong_dir_extension",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_other_end_width_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_other_end_width",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_max_length_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_max_length",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_min_length_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_min_length",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_two_sides_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_equal_rect_width_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_parallel_edge_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_subtract_eol_width_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_par_space",
        "flags": []
      },
      {
        "type": "int",
        "name": "_par_within",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_par_prl_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_par_prl",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_par_min_length_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_par_min_length",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_two_edges_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_same_metal_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_non_eol_corner_only_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_parallel_same_mask_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_enclose_cut_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_below_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_above_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_enclose_dist",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_cut_spacing_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_cut_to_metal_space",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_all_cuts_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_to_concave_corner_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_min_adjacent_length_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "bool",
        "name": "_two_min_adj_length_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_min_adj_length",
        "flags": []
      },
      {
        "type": "int",
        "name": "_min_adj_length1",
        "flags": []
      },
      {
        "type": "int",
        "name": "_min_adj_length2",
        "flags": []
      },
      {
        "type": "bool",
        "name": "_to_notch_length_valid",
        "flags": [],
        "bits": "1"
      },
      {
        "type": "int",
        "name": "_notch_length",
        "flags": []
      }
    ],
    "constructors": [],
    "enums": []
}